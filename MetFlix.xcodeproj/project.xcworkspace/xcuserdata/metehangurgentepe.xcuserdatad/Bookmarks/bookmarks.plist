<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>21</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>20</string>
					<key>Timestamp</key>
					<string>730286094.229627</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MetFlix/Services/NetworkManager.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>if let cacheKey = NSURL(string: url.absoluteString) {
</string>
				<key>leading</key>
				<string>    
    func downloadImage(from url: URL, completion: @escaping(UIImage?) -&gt; Void) {
        </string>
				<key>trailing</key>
				<string>            
            if let image = cache.object(forKey: cacheKey) {
                completion(image)
</string>
			</dict>
			<key>title</key>
			<string>Burayı düzelt</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>63</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>62</string>
					<key>Timestamp</key>
					<string>749643732.73738</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>MetFlix/Services/MovieStore.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        guard let url = URL(string: "\(baseAPIURL)/search/movie") else {
</string>
				<key>leading</key>
				<string>    
    func searchMovie(query: String) async throws -&gt; MovieResponse{
</string>
				<key>trailing</key>
				<string>            throw MovieError.invalidEndpoint
        }
        return try await self.loadURLAndDecode(url: url, params: [
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
